<project name="pa3" default="compile" basedir=".">
    
    <property environment="env"/>

    <!-- Directories -->
    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="log.dir" location="log" />

    <!-- Variables -->
    <property name="client.log" value="clientLog.txt"/>

    <path id="libs.classpath">
        <fileset dir="${env.THRIFT_LIB_PATH}">
            <include name="libthrift*.jar"/>
            <exclude name="libthrift*test.jar"/>
            <exclude name="libthrift*source.jar"/>
            <exclude name="libtrift*javadoc.jar"/>
        </fileset>
        <fileset dir="${env.THRIFT_LIB_PATH}/../deps">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${env.PROJ_PATH}"/>
    </path>

    <path id="build.classpath">
        <path refid="libs.classpath" />
     </path>

    <path id="thrift_compiler.classpath">
        <fileset dir="${env.THRIFT_LIB_PATH}/../../../../compiler/cpp/src/thrift"/>
    </path>

    <path id="pa3.classpath">
        <path refid="build.classpath" />
        <pathelement path="${build.dir}" />
    </path>

    <!-- Generate the thrift gen-java source -->
    <target name="generate">
        <exec failonerror="true" executable="${env.THRIFT_COMPILER_PATH}">
           <arg line="--gen java -out src -r pa3.thrift"/>
        </exec>
    </target>

    <!-- initialize directory structure -->
    <target name="init">
       <tstamp/>
       <mkdir dir="${build.dir}"/>
       <mkdir dir="${log.dir}"/>
    </target>
 
    <!-- Compile all source files -->
    <target name="compile" depends="init, generate">
        <javac compiler="modern" includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" />
     </target>
 
    <!-- Run write heavy client -->
    <target name="clientWriteHeavy" depends="compile">
        <echo>write heavy client:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="client/Client">
            <arg line="commands/commandsWriteHeavy.txt"/>
        </java>
     </target>

    <!-- Run read heavy client -->
    <target name="clientReadHeavy" depends="compile">
        <echo>read heavy client:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="client/Client">
            <arg line="commands/commandsReadHeavy.txt"/>
        </java>
     </target>

    <!-- Run client three -->
    <target name="clientMixed" depends="compile">
        <echo>mixed client:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="client/Client">
            <arg line="commands/commandsMixed.txt"/>
        </java>
     </target>

    <!-- Run custom client -->
    <target name="client" depends="compile">
        <echo>client:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="client/Client">
            <arg line="commands/commands.txt"/>
        </java>
     </target>

    <!-- Run client 'check' -->
    <target name="clientCheck" depends="compile">
        <echo>client check:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="client/Client">
            <arg line="commands/commandsCheck.txt"/>
        </java>
     </target>

    <!-- Start a server -->
    <target name="server" depends="compile">
        <echo>server:</echo>
        <java classpathref="pa3.classpath" failonerror="false" fork="true" classname="server/FileServer"/>
    </target>

    <!-- Clean super node log -->
    <target name="cleanLogs">
        <delete dir="${log.dir}"/>
    </target>

    <!-- Clean everything -->
    <target name="clean">
       <delete dir="${build.dir}"/>
       <delete dir="${log.dir}"/>
    </target>
 </project>